{"version":3,"file":"commonHelpers2.js","sources":["../src/js/favorites.js","../src/js/exercise-card.js"],"sourcesContent":["const pageLinks = document.querySelector('.navigation__links--box');\n\npageLinks.lastElementChild.classList.add('active-page');\n\nimport { checkDate } from './quote';\n\ncheckDate();\n\n// function changeQuote() {\n//   const storedQuote = JSON.parse(localStorage.getItem('quoteObj'));\n//   document.querySelector('.quote-text').innerHTML = storedQuote.quote;\n//   document.querySelector('.quote-author').innerHTML = storedQuote.author;\n// }\n\n// changeQuote();\n","import axios from 'axios';\nimport EnergyFlowApiSevice from './api-service';\nimport imgUrl from '../images/sprite.svg';\n\n\nconst exercisesCardList = document.querySelector(\".favorites-list\");\nconst favoriteDivWithoutCards = document.querySelector(\".favorites-div-without-cards\");\nconst listWithoutExercases = document.querySelector(\".favorites-div-without-cards \");\nconst LOCAL_STORAGE_KEY = \"favoriteExerciseIds\";\nconst energyFlowApiService = new EnergyFlowApiSevice();\n// localStorage.clear()\n\n  function addCardToList(results) {\n    console.log(results)\n    const cardElement = results.map((cardData) => `\n\n      <li class=\"exercises-card\" id=\"${cardData._id}\">\n        <div class=\"exercises-card-upper-part\">\n          <div class=\"div-rating-or-delete-button\">\n            <div class=\"workout-text\">WORKOUT</div>\n            <div class=\"card-rating\">${cardData.rating.toFixed(1)} <span>\n              <svg class=\"rating-icon\" width=\"18\" height=\"18\">\n              <use href=\"${imgUrl}#icon-star\"></use></svg>\n            </span></div>\n            <button type=\"button\" id=\"${\n              cardData._id\n            }\" class=\"card-delete card-delte-inactive\">\n              <svg class=\"trash-icon\" width=\"16\" height=\"16\">\n              <use href=\"${imgUrl}#icon-trash\"></use></svg>\n            </button>\n          </div>\n          <button type=\"button\" class=\"card-start\">Start <span>\n            <svg class=\"start-icon\" width=\"14\" height=\"14\">\n            <use href=\"${imgUrl}#icon-right-arrow\"></use></svg>\n          </span></button>\n        </div>\n        <div class=\"exercises-card-midle-part\">\n          <div class=\"exercises-card-midle-part-svg\">\n            <svg class=\"runing-man-icon\" width=\"24\" height=\"24\">\n            <use href=\"${imgUrl}#icon-runing-man\"></use></svg>\n          </div>\n          <p class=\"card-exercise-name\">${capitalizeFirstLetter(\n            cardData.name\n          )}</p>\n        </div>\n        <div class=\"exercises-card-lower-part\">\n          <p>Burned calories: <span class=\"exercises-card-lower-part-span\">${\n            cardData.burnedCalories\n          } / 3 min</span></p>\n          <p>Body part: <span class=\"exercises-card-lower-part-span\">${\n            cardData.bodyPart\n          }</span></p>\n          <p>Target: <span class=\"exercises-card-lower-part-span\">${\n            cardData.target\n          }</span></p>\n        </div>\n      </li>\n  `\n    )\n    .join('');\n\n  exercisesCardList.insertAdjacentHTML('beforeend', cardElement);\n}\n\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n// --------------delete button-----------------------//\n\nconst exercisesCard = document.querySelector(\".exercises-card\")\nconst removeFromFavoritesButtons = document.querySelectorAll(\".card-delete\");\n\n\n// exercisesCard.addEventListener(\"click\", () =>  {\n//   const exerciseIdToRemove = exercisesCard.id;\n//   const favoriteExerciseIds = getFavoriteExerciseIds();\n//   const indexToRemove = favoriteExerciseIds.indexOf(exerciseIdToRemove);\n\n//   if (indexToRemove !== -1) {\n//     favoriteExerciseIds.splice(indexToRemove, 1);\n//     localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(favoriteExerciseIds));\n//   }\n//   updateInterfaceAfterRemoval(exerciseIdToRemove);\n// });\n\n\nremoveFromFavoritesButtons.forEach(button => {\n\n  button.addEventListener(\"click\", () =>  {\n    const exerciseIdToRemove = button.id;\n\n    const favoriteExerciseIds = getFavoriteExerciseIds();\n    const indexToRemove = favoriteExerciseIds.indexOf(exerciseIdToRemove);\n\n    if (indexToRemove !== -1) {\n      favoriteExerciseIds.splice(indexToRemove, 1);\n      localStorage.setItem(\n        LOCAL_STORAGE_KEY,\n        JSON.stringify(favoriteExerciseIds)\n      );\n    }\n    updateInterfaceAfterRemoval(exerciseIdToRemove);\n  });\n});\n\nfunction updateInterfaceAfterRemoval(exerciseIdToRemove) {\n  const cardToRemove = document.querySelector(\n    `.exercises-card[data-id=\"${exerciseIdToRemove}\"]`\n  ); /////якщо помилка то точно тут\n\n  if (cardToRemove) {\n    cardToRemove.remove();\n  }\n}\n\n\n// ---------------------start button-------------------------------\n\nconst cardStartButton = document.querySelectorAll(\".card-start\");\nconst exerciseModalBackdrop = document.querySelector(\".exercise-modal-backdrop\");\ncardStartButton.forEach(button => {\n  button.addEventListener(\"click\", () => {\n    exerciseModalBackdrop.classList.remove(\"backdrop-is-hidden\");\n  })\n})\n\n\n//--------------------- add to favorites---------------------------\n\nconst addToFavoritesButtons = document.querySelectorAll(\n  '.exercise-favorite-add-btn'\n);\n\naddToFavoritesButtons.forEach(button => {\n\n  button.addEventListener(\"click\", () => {\n    const exerciseId = button.id;\n\n\n    console.log(exerciseId);\n\n    const favoriteExerciseIds = getFavoriteExerciseIds();\n\n    if (!favoriteExerciseIds.includes(exerciseId)) {\n      favoriteExerciseIds.push(exerciseId);\n      localStorage.setItem(\n        LOCAL_STORAGE_KEY,\n        JSON.stringify(favoriteExerciseIds)\n      );\n    } else {\n      console.log('this exersice is already in favorites');\n    }\n  });\n});\n\nfunction getFavoriteExerciseIds() {\n  const storedIds = localStorage.getItem(LOCAL_STORAGE_KEY);\n  return storedIds ? JSON.parse(storedIds) : [];\n}\n\n// -------------------------Завантаження з улюблених-----------------------------------\nconst favoriteExerciseIdInLocalStorage = getFavoriteExerciseIds();\n\nconst fetchDataForIds = async (ids) => {\n  const promises = ids.map((id) => energyFlowApiService.getExerciseInfoById(id));\n  return Promise.all(promises);\n};\n\nif (favoriteExerciseIdInLocalStorage.length !== 0) {\n  listWithoutExercases.classList.add(\"favorites-div-without-cards-hidden\");\n  fetchDataForIds(favoriteExerciseIdInLocalStorage)\n  .then((results) => { addCardToList(results) })\n  .catch((error) => {\n    console.error('Error fetching data:', error);\n  });\n} else {\n  listWithoutExercases.classList.remove(\"favorites-div-without-cards-hidden\");\n}\n\n"],"names":["pageLinks","checkDate","exercisesCardList","listWithoutExercases","LOCAL_STORAGE_KEY","energyFlowApiService","EnergyFlowApiSevice","addCardToList","results","cardElement","cardData","imgUrl","capitalizeFirstLetter","string","removeFromFavoritesButtons","button","exerciseIdToRemove","favoriteExerciseIds","getFavoriteExerciseIds","indexToRemove","updateInterfaceAfterRemoval","cardToRemove","cardStartButton","exerciseModalBackdrop","addToFavoritesButtons","exerciseId","storedIds","favoriteExerciseIdInLocalStorage","fetchDataForIds","ids","promises","id","error"],"mappings":"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"}