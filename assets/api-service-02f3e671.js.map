{"version":3,"file":"api-service-02f3e671.js","sources":["../../src/js/api-service.js"],"sourcesContent":["import axios from 'axios';\n\nexport default class EnergyFlowApiSevice {\n  constructor() {\n    axios.defaults.headers.common['Content-type'] = 'application/json';\n    this.BASE_URL = 'https://energyflow.b.goit.study/api';\n  }\n\n  async getCategoriesByFilter(filterName, page, perPage) {\n    const searchParams = new URLSearchParams({\n      filter: filterName,\n      page: page,\n      limit: perPage,\n    });\n    const response = await axios.get(\n      `${this.BASE_URL}/filters?${searchParams}`\n    );\n    return response.data;\n  }\n  async getExercisesByCategory(filter, category, page, perPage) {\n    const searchParams = new URLSearchParams({\n      [filter]: category,\n      page: page,\n      limit: perPage,\n    });\n    const response = await axios.get(\n      `${this.BASE_URL}/exercises?${searchParams}`\n    );\n    return response.data;\n  }\n  async getExercisesByKeyWord(filter, category, keyword, page, perPage) {\n    const searchParams = new URLSearchParams({\n      [filter]: category,\n      keyword: keyword,\n      page: page,\n      limit: perPage,\n    });\n    const response = await axios.get(\n      `${this.BASE_URL}/exercises?${searchParams}`\n    );\n    return response.data;\n  }\n  async getExerciseInfoById(id) {\n    const response = await axios.get(`${this.BASE_URL}/exercises/${id}`);\n    return response.data;\n  }\n  async giveRating(id, rating, email, comment) {\n    const response = await axios({\n      method: 'patch',\n      url: `${this.BASE_URL}/exercises/${id}/rating`,\n      data: {\n        rate: Number(rating),\n        email: email,\n        review: comment,\n      },\n    });\n    return response;\n  }\n  async getAllExercises() {\n    const response = await axios.get(`${this.BASE_URL}/exercises?&limit=9999`);\n    return response.data;\n  }\n  async getQuote() {\n    const response = await axios.get(`${this.BASE_URL}/quote`);\n    return response.data;\n  }\n  async sendSubscription(email) {\n    const response = await axios({\n      method: 'post',\n      url: `${this.BASE_URL}/subscription`,\n      data: {\n        email: email,\n      },\n    });\n    return response.data;\n  }\n}\n"],"names":["EnergyFlowApiSevice","axios","filterName","page","perPage","searchParams","filter","category","keyword","id","rating","email","comment"],"mappings":"0uBAEe,MAAMA,CAAoB,CACvC,aAAc,CACZC,EAAM,SAAS,QAAQ,OAAO,cAAc,EAAI,mBAChD,KAAK,SAAW,qCACjB,CAED,MAAM,sBAAsBC,EAAYC,EAAMC,EAAS,CACrD,MAAMC,EAAe,IAAI,gBAAgB,CACvC,OAAQH,EACR,KAAMC,EACN,MAAOC,CACb,CAAK,EAID,OAHiB,MAAMH,EAAM,IAC3B,GAAG,KAAK,QAAQ,YAAYI,CAAY,EAC9C,GACoB,IACjB,CACD,MAAM,uBAAuBC,EAAQC,EAAUJ,EAAMC,EAAS,CAC5D,MAAMC,EAAe,IAAI,gBAAgB,CACvC,CAACC,CAAM,EAAGC,EACV,KAAMJ,EACN,MAAOC,CACb,CAAK,EAID,OAHiB,MAAMH,EAAM,IAC3B,GAAG,KAAK,QAAQ,cAAcI,CAAY,EAChD,GACoB,IACjB,CACD,MAAM,sBAAsBC,EAAQC,EAAUC,EAASL,EAAMC,EAAS,CACpE,MAAMC,EAAe,IAAI,gBAAgB,CACvC,CAACC,CAAM,EAAGC,EACV,QAASC,EACT,KAAML,EACN,MAAOC,CACb,CAAK,EAID,OAHiB,MAAMH,EAAM,IAC3B,GAAG,KAAK,QAAQ,cAAcI,CAAY,EAChD,GACoB,IACjB,CACD,MAAM,oBAAoBI,EAAI,CAE5B,OADiB,MAAMR,EAAM,IAAI,GAAG,KAAK,QAAQ,cAAcQ,CAAE,EAAE,GACnD,IACjB,CACD,MAAM,WAAWA,EAAIC,EAAQC,EAAOC,EAAS,CAU3C,OATiB,MAAMX,EAAM,CAC3B,OAAQ,QACR,IAAK,GAAG,KAAK,QAAQ,cAAcQ,CAAE,UACrC,KAAM,CACJ,KAAM,OAAOC,CAAM,EACnB,MAAOC,EACP,OAAQC,CACT,CACP,CAAK,CAEF,CACD,MAAM,iBAAkB,CAEtB,OADiB,MAAMX,EAAM,IAAI,GAAG,KAAK,QAAQ,wBAAwB,GACzD,IACjB,CACD,MAAM,UAAW,CAEf,OADiB,MAAMA,EAAM,IAAI,GAAG,KAAK,QAAQ,QAAQ,GACzC,IACjB,CACD,MAAM,iBAAiBU,EAAO,CAQ5B,OAPiB,MAAMV,EAAM,CAC3B,OAAQ,OACR,IAAK,GAAG,KAAK,QAAQ,gBACrB,KAAM,CACJ,MAAOU,CACR,CACP,CAAK,GACe,IACjB,CACH"}